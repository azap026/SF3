import { query } from './database.js';

async function addDemoWorkMaterials() {
  try {
    const result = await query(`
      INSERT INTO work_materials (work_id, material_id, consumption_per_work_unit, waste_coeff) VALUES
      ('w.341', 'm.1', 5.0, 1.05),
      ('w.341', 'm.2', 2.0, 1.10),
      ('w.341', 'm.3', 1.0, 1.08),
      ('w.341', 'm.4', 0.5, 1.15)
      ON CONFLICT (work_id, material_id) DO NOTHING
    `);

    console.log('‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–≤—è–∑–µ–π —Ä–∞–±–æ—Ç–∞-–º–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫:', result.rowCount);

    // –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å
    const checkResult = await query(`
      SELECT
        wm.*,
        w.name as work_name,
        m.name as material_name,
        m.unit_price as material_unit_price
      FROM work_materials wm
      JOIN works_ref w ON wm.work_id = w.id
      JOIN materials m ON wm.material_id = m.id
      WHERE wm.work_id = 'w.341'
    `);

    console.log('üìã –¢–µ–∫—É—â–∏–µ —Å–≤—è–∑–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã w.341:');
    checkResult.rows.forEach(row => {
      console.log(`- ${row.material_name}: ${row.consumption_per_work_unit} –µ–¥. (–∫–æ—ç—Ñ. –æ—Ç—Ö–æ–¥–∞: ${row.waste_coeff})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

addDemoWorkMaterials();
